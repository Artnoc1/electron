From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Jeremy Apthorp <jeremya@chromium.org>
Date: Thu, 25 Apr 2019 15:25:56 -0700
Subject: allow setting user agent on network context

This is useful for embedders that may want to update user-agent on a
per-context basis. (In particular, Electron supports a setUserAgent
API: https://electronjs.org/docs/api/session#sessetuseragentuseragent-acceptlanguages)

Change-Id: Ifaeb7a753999fcb0fa5866d8e35ddef3c352a034

diff --git a/net/url_request/static_http_user_agent_settings.h b/net/url_request/static_http_user_agent_settings.h
index 0ccfe130f00ec3b6c75cd8ee04d5a2777e1fd00c..653829457d58bf92057cc36aa8a289703d8b0577 100644
--- a/net/url_request/static_http_user_agent_settings.h
+++ b/net/url_request/static_http_user_agent_settings.h
@@ -26,13 +26,17 @@ class NET_EXPORT StaticHttpUserAgentSettings : public HttpUserAgentSettings {
     accept_language_ = new_accept_language;
   }
 
+  void set_user_agent(const std::string& new_user_agent) {
+    user_agent_ = new_user_agent;
+  }
+
   // HttpUserAgentSettings implementation
   std::string GetAcceptLanguage() const override;
   std::string GetUserAgent() const override;
 
  private:
   std::string accept_language_;
-  const std::string user_agent_;
+  std::string user_agent_;
 
   DISALLOW_COPY_AND_ASSIGN(StaticHttpUserAgentSettings);
 };
diff --git a/services/network/network_context.cc b/services/network/network_context.cc
index ead1f65688b8f8c2f328dc227c74e30fbec8666b..b15a23834d143b16037c82dd531281cd5e6f3318 100644
--- a/services/network/network_context.cc
+++ b/services/network/network_context.cc
@@ -1090,6 +1090,13 @@ void NetworkContext::SetNetworkConditions(
                                       std::move(network_conditions));
 }
 
+void NetworkContext::SetUserAgent(const std::string& new_user_agent) {
+  // This may only be called on NetworkContexts created with a constructor that
+  // calls ApplyContextParamsToBuilder.
+  DCHECK(user_agent_settings_);
+  user_agent_settings_->set_user_agent(new_user_agent);
+}
+
 void NetworkContext::SetAcceptLanguage(const std::string& new_accept_language) {
   // This may only be called on NetworkContexts created with the constructor
   // that calls MakeURLRequestContext().
diff --git a/services/network/network_context.h b/services/network/network_context.h
index cffd9a9869beb6fa5ab258cc063ecb9233fc90f5..5b474853f56afd30cfe5ddb905844e10ccf656f0 100644
--- a/services/network/network_context.h
+++ b/services/network/network_context.h
@@ -214,6 +214,7 @@ class COMPONENT_EXPORT(NETWORK_SERVICE) NetworkContext
   void CloseIdleConnections(CloseIdleConnectionsCallback callback) override;
   void SetNetworkConditions(const base::UnguessableToken& throttling_profile_id,
                             mojom::NetworkConditionsPtr conditions) override;
+  void SetUserAgent(const std::string& new_user_agent) override;
   void SetAcceptLanguage(const std::string& new_accept_language) override;
   void SetEnableReferrers(bool enable_referrers) override;
 #if defined(OS_CHROMEOS)
diff --git a/services/network/public/mojom/network_context.mojom b/services/network/public/mojom/network_context.mojom
index 361b6c655fa7ed4554b7a296ffaf02c31a74c67e..f7670e746484b77e9424b913020a90f1b0d0cbd2 100644
--- a/services/network/public/mojom/network_context.mojom
+++ b/services/network/public/mojom/network_context.mojom
@@ -747,6 +747,9 @@ interface NetworkContext {
   SetNetworkConditions(mojo_base.mojom.UnguessableToken throttling_profile_id,
                        NetworkConditions? conditions);
 
+  // Updates the user agent to be used for requests.
+  SetUserAgent(string new_user_agent);
+
   // Updates the Accept-Language header to be used for requests.
   SetAcceptLanguage(string new_accept_language);
 
diff --git a/services/network/test/test_network_context.h b/services/network/test/test_network_context.h
index 99aef1f4c874d3df4c045fa4254d716b4e08f0bc..8237cb6d5865e810a68ab9bd79860329adeff48d 100644
--- a/services/network/test/test_network_context.h
+++ b/services/network/test/test_network_context.h
@@ -92,6 +92,7 @@ class TestNetworkContext : public mojom::NetworkContext {
   void CloseIdleConnections(CloseIdleConnectionsCallback callback) override {}
   void SetNetworkConditions(const base::UnguessableToken& throttling_profile_id,
                             mojom::NetworkConditionsPtr conditions) override {}
+  void SetUserAgent(const std::string& new_user_agent) override {}
   void SetAcceptLanguage(const std::string& new_accept_language) override {}
   void SetEnableReferrers(bool enable_referrers) override {}
 #if defined(OS_CHROMEOS)
